Ключи для запуска qGNA в QML Viewer

-I "/var installPath=%QMLDIR%" -translation "%QMLDIR%\i18n\qml_ru.qm"
где %QMLDIR% - полный путь к qml проекту.

Проблематика, на решение которой направленно описанное ниже разделние на сущности и обязанности:
 - единообразие внешнего вида в приложении и сайте.
 - единообразие свойcтв и методов базовых элементов UI с точки зрения разработчика.
 - использование жёсткой унификации с цветовыми схемами.
 - простота добавления новых элементов, в том числе низко квалифицированными сотрудниками.
 
Основная концепция:
 - Декларативная вёрстка 
 - Только то, что вам пригодится 
 - Разделение между логикой и внешним видом везде
 
 Сущности:
 - <Class>Behavior (поведение) содержит базовый, минимальный и достаточные при этом набор свойст и методов, не имеющих отношения к отображению. 
 - <Class>Style<Type> (стиль) содержит унифицированный набор свойст, отвечающих за группу свойст одного типа (цвета, изображения, специфичные свойства, например TextStyleColors, ComboBoxStyleImages)
 - <Class>Base (базовый класс, не обязательная сущность) содержит базовое отображдение, ссылк(у/и) на используемые в контролле стили, базовое отображение. 
   Определяет базовый набор свойст для котролла этого класса, набор стейтов и правила для переключения.
 - <Class> содержит расширение для базовой сущности или самостоятельную реализацию.
  
 Отношения в наследовании
 - Агрегация для Base и Behavior. Почему (главное) - не весь набор свойств Behavior может и должен относится к Base классу.
 - Наследование для <Class> и <Class>Base.  
 - Наследование для разновидностей одного стиля, например TextStyleRedColors или ComboBoxStyleFunnyImages
 
 Смайлы
 - Репозиторий содержит в себе уже готовый smiles.rcc пакет, с графическими смайлами. Для желающих перегенерировать файл, нужно:
	спулить изображения https://github.com/Ranks/emojione/tree/master/assets/png в папку "%QMLDIR%\Develop\Assets\Smiles\
	rcc.exe -compress 3 -threshold 4 -binary  smiles.qrc" -o smiles.rcc