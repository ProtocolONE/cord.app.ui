import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump.exe -nonrelocatable Tulip 1.0 ./plugin'

Module {
    dependencies: []
    Component {
        name: "BrowserDetect"
        prototype: "QObject"
        exports: ["Tulip/BrowserDetect 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "getBrowserName"; type: "string" }
    }
    Component {
        name: "GGS::Auth::RegistryCredentialStorage"
        prototype: "QObject"
        exports: ["Tulip/CredentialStorage 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "save"
            Parameter { name: "userId"; type: "string" }
            Parameter { name: "appKey"; type: "string" }
            Parameter { name: "cookie"; type: "string" }
            Parameter { name: "guest"; type: "bool" }
        }
        Method {
            name: "save"
            Parameter { name: "userId"; type: "string" }
            Parameter { name: "appKey"; type: "string" }
            Parameter { name: "cookie"; type: "string" }
        }
        Method { name: "load"; type: "QVariantMap" }
        Method { name: "reset" }
        Method {
            name: "setCredentialPath"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "loadOldAuth"; type: "QVariantMap" }
        Method {
            name: "saveGuest"
            Parameter { name: "userId"; type: "string" }
            Parameter { name: "appKey"; type: "string" }
            Parameter { name: "cookie"; type: "string" }
        }
        Method { name: "loadGuest"; type: "QVariantMap" }
        Method {
            name: "saveEx"
            Parameter { name: "prefix"; type: "string" }
            Parameter { name: "userId"; type: "string" }
            Parameter { name: "appKey"; type: "string" }
            Parameter { name: "cookie"; type: "string" }
        }
        Method {
            name: "loadEx"
            type: "QVariantMap"
            Parameter { name: "prefix"; type: "string" }
        }
        Method {
            name: "resetEx"
            Parameter { name: "prefix"; type: "string" }
        }
    }
    Component {
        name: "GGS::Core::Marketing"
        prototype: "QObject"
        Enum {
            name: "MarketingTarget"
            values: {
                "FirstRunGna": 2596,
                "StartDownloadService": 37,
                "FinishDownloadService": 38,
                "FinishInstallService": 39,
                "FirstRunService": 40,
                "SuccessAuthInGN": 2633,
                "AnyStartGna": 2640,
                "TooLongInstallTime": 2650,
                "ErrorDuringInstall": 2651,
                "CloseService": 2660,
                "SendDownloadServiceInfo": 2661,
                "StartService": 2662,
                "ClickOnMainButton": 2663,
                "NewGameServerShowed": 2694,
                "ClickNewGameServerPlay": 2695,
                "InstalledWasNotRunShowed": 2696,
                "ClickInstalledWasNotRunPlay": 2697,
                "AfterGameAdvertisingAction": 2701,
                "AuthByOldGnaInfo": 2720,
                "GuestAccountRequest": 2721,
                "GuestAccountConfirm": 2722,
                "AnnouncementShown": 2723,
                "AnnouncementClosedClicked": 2726,
                "AnnouncementMissClicked": 2725,
                "AnnouncementActionClicked": 2724,
                "FirstRunQCS": 2727,
                "AnyStartQCS": 2728,
                "FirstSuccessAuthInQCS": 2729,
                "SuccessAuthInQCS": 2730,
                "AnyStartQGna": 2731,
                "ProblemAfterGameStart": 2748,
                "NotLikeTheGame": 2749,
                "ThettaInfo": 2750,
                "ThettaConnectFail": 2754,
                "ThettaSendInfoFail": 2756,
                "ServiceUninstalledFromOS": 2762,
                "ServiceUninstalledFromUI": 2763,
                "ThettaPatternFound": 2766,
                "ApplicationSettingsChanged": 2768
            }
        }
        Enum {
            name: "InstallerStep"
            values: {
                "InstallAcceptLicense": 2608
            }
        }
        Signal {
            name: "marketingRequest"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "sendOnceByServiceMarketingRequest"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "sendOnceMarketingRequest"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "sendOnceInstallerStep"
            Parameter { name: "target"; type: "GGS::Core::Marketing::InstallerSteps" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
    }
    Component {
        name: "GGS::MarketingAdapter"
        prototype: "GGS::Core::Marketing"
        exports: ["Tulip/Marketing 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "send"
            Parameter { name: "target"; type: "int" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "sendOnceByService"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "sendOnce"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method { name: "mid"; type: "string" }
    }
    Component {
        name: "GGS::MouseCursor"
        prototype: "QObject"
        exports: ["Tulip/MouseCursor 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "mousePos"; type: "QPoint" }
        Method { name: "debugOnlyWindowPos"; type: "QPoint" }
    }
    Component {
        name: "GoogleAnalytics"
        prototype: "QObject"
        exports: ["Tulip/GoogleAnalyticsHelper 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "systemLanguage"; type: "string" }
        Method { name: "systemVersion"; type: "string" }
        Method { name: "winVersion"; type: "string" }
    }
    Component {
        name: "Host"
        prototype: "QObject"
        exports: ["Tulip/Host 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal {
            name: "hwidChanged"
            Parameter { name: "hwid"; type: "string" }
        }
        Method { name: "arguments"; type: "QStringList" }
        Method {
            name: "hwid"
            type: "string"
            Parameter { name: "async"; type: "bool" }
        }
        Method { name: "hwid"; type: "string" }
    }
    Component {
        name: "LocalStorage"
        prototype: "QObject"
        exports: ["Tulip/LocalStorage 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "openDatabaseSync"
            type: "QmlSqlDatabaseData*"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "dbname"; type: "string" }
            Parameter { name: "version"; type: "string" }
            Parameter { name: "description"; type: "string" }
            Parameter { name: "estimated_size"; type: "int" }
        }
    }
    Component {
        name: "QCursorArea"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Tulip/CursorArea 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Cursor"
            values: {
                "DefaultCursor": 0,
                "ArrowCursor": 1,
                "SizeHorCursor": 2,
                "SizeVerCursor": 3,
                "SizeAllCursor": 4,
                "SplitHCursor": 5,
                "SplitVCursor": 6,
                "WaitCursor": 7,
                "PointingHandCursor": 8,
                "SizeFDiagCursor": 9,
                "IBeamCursor": 10
            }
        }
        Property { name: "cursor"; type: "Cursor" }
    }
    Component {
        name: "QDesktopItem"
        prototype: "QObject"
        exports: ["Tulip/Desktop 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "screenWidth"; type: "int"; isReadonly: true }
        Property { name: "screenHeight"; type: "int"; isReadonly: true }
        Property { name: "availableWidth"; type: "int"; isReadonly: true }
        Property { name: "availableHeight"; type: "int"; isReadonly: true }
        Property { name: "screenCount"; type: "int"; isReadonly: true }
        Property { name: "primaryScreen"; type: "int"; isReadonly: true }
        Property { name: "primaryScreenAvailableGeometry"; type: "QRect"; isReadonly: true }
        Signal { name: "screenGeometryChanged" }
        Signal { name: "availableGeometryChanged" }
        Method { name: "anythingChanged" }
        Method {
            name: "screenGeometry"
            type: "QRect"
            Parameter { name: "screen"; type: "int" }
        }
        Method {
            name: "screenNumber"
            type: "int"
            Parameter { name: "xpos"; type: "int" }
            Parameter { name: "ypos"; type: "int" }
        }
        Method {
            name: "availableGeometry"
            type: "QRect"
            Parameter { name: "screen"; type: "int" }
        }
    }
    Component {
        name: "QFileDialogAdapter"
        prototype: "QObject"
        exports: ["Tulip/QFileDialog 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "getOpenFileName"
            type: "string"
            Parameter { name: "caption"; type: "string" }
            Parameter { name: "dir"; type: "string" }
            Parameter { name: "filter"; type: "string" }
        }
        Method {
            name: "getExistingDirectory"
            type: "string"
            Parameter { name: "caption"; type: "string" }
            Parameter { name: "dir"; type: "string" }
        }
    }
    Component {
        name: "QQuickItem"
        defaultProperty: "data"
        prototype: "QObject"
        Enum {
            name: "TransformOrigin"
            values: {
                "TopLeft": 0,
                "Top": 1,
                "TopRight": 2,
                "Left": 3,
                "Center": 4,
                "Right": 5,
                "BottomLeft": 6,
                "Bottom": 7,
                "BottomRight": 8
            }
        }
        Property { name: "parent"; type: "QQuickItem"; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "resources"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "children"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "x"; type: "double" }
        Property { name: "y"; type: "double" }
        Property { name: "z"; type: "double" }
        Property { name: "width"; type: "double" }
        Property { name: "height"; type: "double" }
        Property { name: "opacity"; type: "double" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "visibleChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "states"; type: "QQuickState"; isList: true; isReadonly: true }
        Property { name: "transitions"; type: "QQuickTransition"; isList: true; isReadonly: true }
        Property { name: "state"; type: "string" }
        Property { name: "childrenRect"; type: "QRectF"; isReadonly: true }
        Property { name: "anchors"; type: "QQuickAnchors"; isReadonly: true; isPointer: true }
        Property { name: "left"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "right"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "horizontalCenter"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "top"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "bottom"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "verticalCenter"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "baseline"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "baselineOffset"; type: "double" }
        Property { name: "clip"; type: "bool" }
        Property { name: "focus"; type: "bool" }
        Property { name: "activeFocus"; type: "bool"; isReadonly: true }
        Property { name: "activeFocusOnTab"; revision: 1; type: "bool" }
        Property { name: "rotation"; type: "double" }
        Property { name: "scale"; type: "double" }
        Property { name: "transformOrigin"; type: "TransformOrigin" }
        Property { name: "transformOriginPoint"; type: "QPointF"; isReadonly: true }
        Property { name: "transform"; type: "QQuickTransform"; isList: true; isReadonly: true }
        Property { name: "smooth"; type: "bool" }
        Property { name: "antialiasing"; type: "bool" }
        Property { name: "implicitWidth"; type: "double" }
        Property { name: "implicitHeight"; type: "double" }
        Property { name: "layer"; type: "QQuickItemLayer"; isReadonly: true; isPointer: true }
        Signal {
            name: "childrenRectChanged"
            Parameter { type: "QRectF" }
        }
        Signal {
            name: "baselineOffsetChanged"
            Parameter { type: "double" }
        }
        Signal {
            name: "stateChanged"
            Parameter { type: "string" }
        }
        Signal {
            name: "focusChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "activeFocusChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "activeFocusOnTabChanged"
            revision: 1
            Parameter { type: "bool" }
        }
        Signal {
            name: "parentChanged"
            Parameter { type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "transformOriginChanged"
            Parameter { type: "TransformOrigin" }
        }
        Signal {
            name: "smoothChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "antialiasingChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "clipChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "windowChanged"
            revision: 1
            Parameter { name: "window"; type: "QQuickWindow"; isPointer: true }
        }
        Method { name: "update" }
        Method {
            name: "grabToImage"
            revision: 2
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "targetSize"; type: "QSize" }
        }
        Method {
            name: "grabToImage"
            revision: 2
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "contains"
            type: "bool"
            Parameter { name: "point"; type: "QPointF" }
        }
        Method {
            name: "mapFromItem"
            Parameter { type: "QQmlV4Function"; isPointer: true }
        }
        Method {
            name: "mapToItem"
            Parameter { type: "QQmlV4Function"; isPointer: true }
        }
        Method { name: "forceActiveFocus" }
        Method {
            name: "forceActiveFocus"
            Parameter { name: "reason"; type: "Qt::FocusReason" }
        }
        Method {
            name: "nextItemInFocusChain"
            revision: 1
            type: "QQuickItem*"
            Parameter { name: "forward"; type: "bool" }
        }
        Method { name: "nextItemInFocusChain"; revision: 1; type: "QQuickItem*" }
        Method {
            name: "childAt"
            type: "QQuickItem*"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
    }
    Component {
        name: "QmlSqlDatabaseData"
        prototype: "QObject"
        exports: ["Tulip/QmlSqlDatabaseData 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "executeSql"
            type: "QVariantMap"
            Parameter { name: "sql"; type: "string" }
        }
        Method {
            name: "executeSql"
            type: "QVariantMap"
            Parameter { name: "sql"; type: "string" }
            Parameter { name: "args"; type: "QVariant" }
        }
        Method { name: "transaction"; type: "bool" }
        Method { name: "commit"; type: "bool" }
        Method { name: "rollback"; type: "bool" }
    }
    Component {
        name: "SettingsAdapter"
        prototype: "QObject"
        exports: ["Tulip/Settings 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "setValue"
            Parameter { name: "group"; type: "string" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "group"; type: "string" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "defaultValue"; type: "QVariant" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "group"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "remove"
            Parameter { name: "group"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
    }
    Component {
        name: "Shortcut"
        prototype: "QObject"
        exports: ["Tulip/Shortcut 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "key"; type: "QVariant" }
        Signal { name: "activated" }
        Signal { name: "pressedAndHold" }
    }
    Component {
        name: "StandardPaths"
        prototype: "QObject"
        exports: ["Tulip/StandardPaths 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "StandardLocation"
            values: {
                "DesktopLocation": 0,
                "DocumentsLocation": 1,
                "FontsLocation": 2,
                "ApplicationsLocation": 3,
                "MusicLocation": 4,
                "MoviesLocation": 5,
                "PicturesLocation": 6,
                "TempLocation": 7,
                "HomeLocation": 8,
                "DataLocation": 9,
                "CacheLocation": 10,
                "GenericCacheLocation": 15,
                "GenericDataLocation": 11,
                "RuntimeLocation": 12,
                "ConfigLocation": 13,
                "GenericConfigLocation": 16,
                "DownloadLocation": 14
            }
        }
        Method {
            name: "writableLocation"
            type: "string"
            Parameter { name: "type"; type: "uint" }
        }
    }
    Component {
        name: "StyleReader"
        prototype: "QObject"
        exports: ["Tulip/StyleReader 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "read"
            type: "QVariantList"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "TaskList"
        prototype: "QObject"
        exports: ["Tulip/TaskList 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "addCategory"
            type: "int"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "removeCategory"
            Parameter { name: "id"; type: "int" }
        }
        Method {
            name: "addItem"
            type: "int"
            Parameter { name: "categoryId"; type: "int" }
            Parameter { name: "icon"; type: "string" }
            Parameter { name: "name"; type: "string" }
            Parameter { name: "description"; type: "string" }
            Parameter { name: "params"; type: "string" }
        }
        Method {
            name: "addTask"
            type: "int"
            Parameter { name: "icon"; type: "string" }
            Parameter { name: "name"; type: "string" }
            Parameter { name: "description"; type: "string" }
            Parameter { name: "params"; type: "string" }
        }
        Method {
            name: "setGuid"
            Parameter { name: "guid"; type: "string" }
        }
        Method { name: "removeAllTasks" }
        Method { name: "removeAll" }
        Method { name: "apply" }
    }
    Component {
        name: "TextDocumentHelper"
        prototype: "QObject"
        exports: ["Tulip/TextDocumentHelper 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method {
            name: "stripHtml"
            type: "string"
            Parameter { name: "html"; type: "string" }
        }
    }
    Component {
        name: "ThemePack"
        prototype: "QObject"
        exports: ["Tulip/ThemePack 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Ready": 1,
                "Loading": 2,
                "Error": 3
            }
        }
        Property { name: "themeFolder"; type: "string" }
        Property { name: "source"; type: "string" }
        Property { name: "progress"; type: "double"; isReadonly: true }
        Property { name: "size"; type: "qlonglong"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Method { name: "install"; type: "bool" }
        Method { name: "download" }
    }
    Component {
        name: "TrayWindow"
        prototype: "QObject"
        exports: ["Tulip/TrayWindow 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "animatedSource"; type: "string" }
        Signal { name: "activate" }
        Signal {
            name: "activateWindow"
            Parameter { name: "mouseX"; type: "int" }
            Parameter { name: "mouseY"; type: "int" }
        }
        Method {
            name: "setIcon"
            Parameter { name: "iconSource"; type: "string" }
        }
        Method {
            name: "setToolTip"
            Parameter { name: "toolTip"; type: "string" }
        }
        Method { name: "hide" }
    }
    Component {
        name: "Uuid"
        prototype: "QObject"
        exports: ["Tulip/Uuid 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Method { name: "create"; type: "string" }
    }
    Component {
        name: "WheelArea"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Tulip/WheelArea 1.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "verticalWheel"
            Parameter { name: "delta"; type: "int" }
        }
        Signal {
            name: "horizontalWheel"
            Parameter { name: "delta"; type: "int" }
        }
    }
}
