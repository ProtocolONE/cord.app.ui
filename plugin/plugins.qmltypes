import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.

Module {
    Component {
        name: "App"
        prototype: "QObject"
        exports: [
            "Tulip/App 1.0"
        ]
        Method { name: "arguments"; type: "QStringList" }
    }
    Component {
        name: "GGS::Auth::RegistryCredentialStorage"
        prototype: "QObject"
        exports: [
            "Tulip/CredentialStorage 1.0"
        ]
        Method {
            name: "save"
            Parameter { name: "userId"; type: "string" }
            Parameter { name: "appKey"; type: "string" }
            Parameter { name: "cookie"; type: "string" }
            Parameter { name: "guest"; type: "bool" }
        }
        Method {
            name: "save"
            Parameter { name: "userId"; type: "string" }
            Parameter { name: "appKey"; type: "string" }
            Parameter { name: "cookie"; type: "string" }
        }
        Method { name: "load"; type: "QVariantMap" }
        Method { name: "reset" }
        Method {
            name: "setCredentialPath"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "loadOldAuth"; type: "QVariantMap" }
        Method {
            name: "saveGuest"
            Parameter { name: "userId"; type: "string" }
            Parameter { name: "appKey"; type: "string" }
            Parameter { name: "cookie"; type: "string" }
        }
        Method { name: "loadGuest"; type: "QVariantMap" }
    }
    Component {
        name: "GGS::Core::Marketing"
        prototype: "QObject"
        Enum {
            name: "MarketingTarget"
            values: {
                "FirstRunGna": 2596,
                "StartDownloadService": 37,
                "FinishDownloadService": 38,
                "FinishInstallService": 39,
                "FirstRunService": 40,
                "SuccessAuthInGN": 2633,
                "AnyStartGna": 2640,
                "TooLongInstallTime": 2650,
                "ErrorDuringInstall": 2651,
                "CloseService": 2660,
                "SendDownloadServiceInfo": 2661,
                "StartService": 2662,
                "ClickOnMainButton": 2663,
                "NewGameServerShowed": 2694,
                "ClickNewGameServerPlay": 2695,
                "InstalledWasNotRunShowed": 2696,
                "ClickInstalledWasNotRunPlay": 2697,
                "AfterGameAdvertisingAction": 2701,
                "AuthByOldGnaInfo": 2720,
                "GuestAccountRequest": 2721,
                "GuestAccountConfirm": 2722,
                "AnnouncementShown": 2723,
                "AnnouncementClosedClicked": 2726,
                "AnnouncementMissClicked": 2725,
                "AnnouncementActionClicked": 2724,
                "FirstRunQCS": 2727,
                "AnyStartQCS": 2728,
                "FirstSuccessAuthInQCS": 2729,
                "SuccessAuthInQCS": 2730,
                "AnyStartQGna": 2731
            }
        }
        Enum {
            name: "InstallerStep"
            values: {
                "InstallAcceptLicense": 2608
            }
        }
        Signal {
            name: "marketingRequest"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "sendOnceByServiceMarketingRequest"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "sendOnceMarketingRequest"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Signal {
            name: "sendOnceInstallerStep"
            Parameter { name: "target"; type: "GGS::Core::Marketing::InstallerSteps" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
    }
    Component {
        name: "GGS::MarketingAdapter"
        prototype: "GGS::Core::Marketing"
        exports: [
            "Tulip/Marketing 1.0"
        ]
        Method {
            name: "send"
            Parameter { name: "target"; type: "int" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "sendOnceByService"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "sendOnce"
            Parameter { name: "target"; type: "GGS::Core::Marketing::MarketingTargets" }
            Parameter { name: "serviceId"; type: "string" }
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method { name: "mid"; type: "string" }
    }
    Component {
        name: "GGS::WebView::NetworkAccessManagerInteractor"
        prototype: "QObject"
        exports: [
            "Tulip/WebViewHelper 1.0"
        ]
        Method { name: "clearCookies" }
        Method { name: "clearAllCookies" }
        Method {
            name: "setCookiesFromUrl"
            Parameter { name: "cookies"; type: "string" }
            Parameter { name: "url"; type: "string" }
        }
        Method {
            name: "cookiesForUrl"
            Parameter { name: "url"; type: "string" }
        }
    }
    Component {
        name: "GoogleAnalytics"
        prototype: "QObject"
        exports: [
            "Tulip/GoogleAnalyticsHelper 1.0"
        ]
        Method { name: "systemLanguage"; type: "string" }
        Method { name: "systemVersion"; type: "string" }
    }
    Component {
        name: "QCursorArea"
        defaultProperty: "data"
        prototype: "QDeclarativeItem"
        exports: [
            "Tulip/CursorArea 1.0"
        ]
        Enum {
            name: "Cursor"
            values: {
                "DefaultCursor": 0,
                "ArrowCursor": 1,
                "SizeHorCursor": 2,
                "SizeVerCursor": 3,
                "SizeAllCursor": 4,
                "SplitHCursor": 5,
                "SplitVCursor": 6,
                "WaitCursor": 7,
                "PointingHandCursor": 8,
                "SizeFDiagCursor": 9
            }
        }
        Property { name: "cursor"; type: "Cursor" }
        Signal { name: "cursorChanged" }
    }
    Component {
        name: "QDesktopItem"
        prototype: "QObject"
        exports: [
            "Tulip/Desktop 1.0"
        ]
        Property { name: "screenWidth"; type: "int"; isReadonly: true }
        Property { name: "screenHeight"; type: "int"; isReadonly: true }
        Property { name: "availableWidth"; type: "int"; isReadonly: true }
        Property { name: "availableHeight"; type: "int"; isReadonly: true }
        Property { name: "screenCount"; type: "int"; isReadonly: true }
        Property { name: "primaryScreenAvailableGeometry"; type: "QRect"; isReadonly: true }
        Signal { name: "screenGeometryChanged" }
        Signal { name: "availableGeometryChanged" }
        Signal { name: "screenCountChanged" }
        Signal { name: "primaryScreenAvailableGeometryChanged" }
        Method { name: "anythingChanged" }
        Method {
            name: "screenGeometry"
            type: "QRect"
            Parameter { name: "screen"; type: "int" }
        }
        Method {
            name: "availableGeometry"
            type: "QRect"
            Parameter { name: "screen"; type: "int" }
        }
    }
    Component {
        name: "QFileDialogAdapter"
        prototype: "QObject"
        exports: [
            "Tulip/QFileDialog 1.0"
        ]
        Method {
            name: "getOpenFileName"
            type: "string"
            Parameter { name: "caption"; type: "string" }
            Parameter { name: "dir"; type: "string" }
            Parameter { name: "filter"; type: "string" }
        }
        Method {
            name: "getExistingDirectory"
            type: "string"
            Parameter { name: "caption"; type: "string" }
            Parameter { name: "dir"; type: "string" }
        }
    }
    Component {
        name: "QWindowItem"
        defaultProperty: "data"
        prototype: "QDeclarativeItem"
        exports: [
            "Tulip/Window 1.0"
        ]
        Property { name: "x"; type: "int" }
        Property { name: "y"; type: "int" }
        Property { name: "height"; type: "int" }
        Property { name: "width"; type: "int" }
        Property { name: "minimumHeight"; type: "int" }
        Property { name: "maximumHeight"; type: "int" }
        Property { name: "minimumWidth"; type: "int" }
        Property { name: "maximumWidth"; type: "int" }
        Property { name: "visible"; type: "bool" }
        Property { name: "windowDecoration"; type: "bool" }
        Property { name: "modality"; type: "Qt::WindowModality" }
        Property { name: "deleteOnClose"; type: "bool" }
        Property { name: "windowState"; type: "Qt::WindowState" }
        Property { name: "title"; type: "string" }
        Property { name: "topMost"; type: "bool" }
        Property { name: "flags"; type: "int" }
        Signal { name: "sizeChanged" }
        Signal { name: "xChanged" }
        Signal { name: "yChanged" }
        Signal { name: "visibleChanged" }
        Signal { name: "windowDecorationChanged" }
        Signal { name: "windowStateChanged" }
        Signal { name: "minimumHeightChanged" }
        Signal { name: "minimumWidthChanged" }
        Signal { name: "maximumHeightChanged" }
        Signal { name: "maximumWidthChanged" }
        Signal { name: "titleChanged" }
        Signal { name: "modalityChanged" }
        Signal { name: "deleteOnCloseChanged" }
        Signal { name: "topMostChanged" }
        Signal { name: "flagsChanged" }
        Signal { name: "beforeClosed" }
        Method { name: "close" }
    }
    Component {
        name: "SettingsAdapter"
        prototype: "QObject"
        exports: [
            "Tulip/Settings 1.0"
        ]
        Method {
            name: "setValue"
            Parameter { name: "group"; type: "string" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "group"; type: "string" }
            Parameter { name: "key"; type: "string" }
            Parameter { name: "defaultValue"; type: "QVariant" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "group"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
    }
    Component {
        name: "WheelArea"
        defaultProperty: "data"
        prototype: "QDeclarativeItem"
        exports: [
            "Tulip/WheelArea 1.0"
        ]
        Signal {
            name: "verticalWheel"
            Parameter { name: "delta"; type: "int" }
        }
        Signal {
            name: "horizontalWheel"
            Parameter { name: "delta"; type: "int" }
        }
    }
    Component { name: "QEasingCurve"; prototype: "QDeclarativeEasingValueType" }
}
